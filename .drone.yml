kind: pipeline
type: docker
name: pre-release

platform:
  os: linux
  arch: arm

trigger:
  branch:
    - release/*
  event:
    - tag
  ref:
    - refs/tags/v*-pre*

concurrency:
  limit: 1

clone:
  disable: true

services:
  - name: launch-docker
    image: mazzolino/docker:20.10.12-dind
    privileged: true
    network_mode: host
    volumes:
      - name: dockersock
        path: /var/run
    command: ['--insecure-registry=192.168.1.125:5000']

volumes:
  - name: dockersock
    temp: {}

steps:
  - name: clone
    image: 192.168.1.125:5000/cleep-git:latest
    commands:
      - git clone $DRONE_REMOTE_URL cleep-dev
      - ls -la
      - cd cleep-dev
      - git checkout $DRONE_SOURCE_BRANCH

  - name: check-cleep-sources
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    privileged: true
    commands:
      - export CLEEP_ENV=ci
      - python3 -m pip -q --no-color install pip cleepcli --upgrade
      - cleep-cli --version
      - cd cleep-dev
      - python3 -m pip install -r requirements.txt
      - python3 -m pip freeze
      - export REPO_DIR=/drone/src/cleep-dev
      - # force all code to be updated from sources
      - cleep-cli coresync
      - cleep-cli cigetmods
      - cleep-cli modssync --run-scripts
      - # dry run
      - cleep --noro --stdout --dryrun

  - name: run-cleep-tests
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    privileged: true
    environment:
      COVERALLS_REPO_TOKEN:
        from_secret: coveralls_cleep_token
    commands:
      - python3 -m pip -q --no-color install pip cleepcli --upgrade
      - cleep-cli --version
      - cd cleep-dev
      - python3 -m pip install -r requirements-test.txt
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli coresync
      - cleep-cli coretests --coverage --output

  - name: build-cleep-deb
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    environment:
      SENTRY_DSN:
        from_secret: sentry_dsn
    commands:
      - apt-get -o Acquire::ForceIPv4=true -qq update
      - apt-get -o Acquire::ForceIPv4=true -qq -y install python3 wget python3-distutils python3-dev devscripts python3-all python3-setuptools dh-python
      - python3 -m pip -q --no-color install pip cleepcli --upgrade
      - cleep-cli --version
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli corebuild
      - ls -la

  - name: test-cleep-deb-install
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    commands:
      - python3 -m pip -q --no-color install pip --upgrade
      - python3 -m pip -q --no-color install cleepcli --upgrade
      - # install cleep
      - apt-get install --yes --fix-broken ./cleep_*_armhf.deb
      - # force core modules to be updated from sources
      - cleep-cli cigetmods
      - cleep-cli modssync --run-scripts
      - # dry run
      - export CLEEP_ENV=ci
      - cleep --noro --stdout --dryrun
      - cleep --version > version.txt
      - cat version.txt

  - name: build-cleep-docker-image
    image: 192.168.1.125:5000/cleep-utils:20230205
    network_mode: host
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - echo "==> Drop docker image build for now (installed mandatory apps are not yet published)" && exit 0
      - # MUST BE RAN AFTER test-cleep-install STEP to get version.txt file generated
      - test -f version.txt || echo "No version.txt file found. Cannot continue"
      - docker --version
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - cp -a "cleep_"$VERSION"_armhf.deb" "cleep-dev/cleep.deb"
      - cd cleep-dev
      - ls -la 
      - docker login 192.168.1.125:5000 --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - docker build -f Dockerfile -t 192.168.1.125:5000/cleep/cleep:$VERSION .
      - # DO NOT PUSH IMAGE TO REGISTRY



---
kind: pipeline
type: docker
name: release-candidate

platform:
  os: linux
  arch: arm

trigger:
  branch:
    - master
  event:
    - tag
  ref:
    - refs/tags/v*-rc*

concurrency:
  limit: 1

clone:
  disable: true

services:
  - name: launch-docker
    image: mazzolino/docker:20.10.12-dind
    privileged: true
    network_mode: host
    volumes:
      - name: dockersock
        path: /var/run
    command: ['--insecure-registry=192.168.1.125:5000']

volumes:
  - name: dockersock
    temp: {}

steps:
  - name: clone
    image: 192.168.1.125:5000/cleep-git:latest
    commands:
      - git clone $DRONE_REMOTE_URL cleep-dev
      - ls -la
      - cd cleep-dev
      - git checkout $DRONE_SOURCE_BRANCH

  - name: run-cleep-tests
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    privileged: true
    environment:
      COVERALLS_REPO_TOKEN:
        from_secret: coveralls_cleep_token
    commands:
      - python3 -m pip -q --no-color install pip --upgrade
      - python3 -m pip -q --no-color install cleepcli coveralls --upgrade
      - cleep-cli --version
      - cd cleep-dev
      - python3 -m pip install -r requirements-test.txt
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli coresync
      - cleep-cli coretests --coverage --output
      - coveralls ||Â /bin/true

  - name: build-cleep-deb
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    environment:
      SENTRY_DSN:
        from_secret: sentry_dsn
    commands:
      - apt-get -o Acquire::ForceIPv4=true -qq update
      - apt-get -o Acquire::ForceIPv4=true -qq -y install python3 wget python3-distutils python3-dev devscripts python3-all python3-setuptools dh-python
      - python3 -m pip -q --no-color install pip --upgrade
      - python3 -m pip -q --no-color install cleepcli --upgrade
      - python3 -m pip freeze | grep cleepcli
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli corebuild
      - ls -la

  - name: test-cleep-install
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    commands:
      - python3 -m pip -q --no-color install pip --upgrade
      - python3 -m pip -q --no-color install cleepcli --upgrade
      - # install cleep
      - apt-get install --yes --fix-broken ./cleep_*_armhf.deb
      - # force core modules to be updated from sources
      - cleep-cli cigetmods
      - # dry run
      - export CLEEP_ENV=ci
      - cleep --noro --stdout --dryrun
      - cleep --version > version.txt
      - cat version.txt

  - name: publish-cleep-docs
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    environment:
      ID_ED25519:
        from_secret: id_ed25519
      ID_ED25519_PUB:
        from_secret: id_ed25519_pub
    commands:
      - python3 -m pip -q --no-color install pip --upgrade
      - python3 -m pip -q --no-color install cleepcli --upgrade
      - # configure ssh
      - mkdir -p ~/.ssh
      - echo "$ID_ED25519" > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - echo "$ID_ED25519_PUB" > ~/.ssh/id_ed25519.pub
      - chmod 644 ~/.ssh/id_ed25519.pub
      - ssh-keyscan github.com >> githubKey
      - ssh-keygen -lf githubKey
      - cat githubKey > ~/.ssh/known_hosts
      - # configure git
      - cd cleep-dev
      - git config --global user.email "drone@localhost"
      - git config --global user.name "drone"
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli coredocs --publish

  - name: build-cleep-docker-image
    image: 192.168.1.125:5000/cleep-utils:20230205
    network_mode: host
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - # MUST BE RAN AFTER test-cleep-install STEP to get version.txt file generated
      - test -f version.txt || echo "No version.txt file found. Cannot continue"
      - docker --version
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - cp -a "cleep_"$VERSION"_armhf.deb" "cleep-dev/cleep.deb"
      - cd cleep-dev
      - ls -la 
      - docker login 192.168.1.125:5000 --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - docker build -f Dockerfile -t 192.168.1.125:5000/cleep/cleep:$VERSION .
      - docker push --quiet 192.168.1.125:5000/cleep/cleep:$VERSION 

  - name: update-app-ci-for-rc
    image: 192.168.1.125:5000/cleep-git:20230216
    network_mode: host
    environment:
      ID_ED25519:
        from_secret: id_ed25519
      ID_ED25519_PUB:
        from_secret: id_ed25519_pub
    commands:
      - # configure ssh
      - mkdir -p ~/.ssh
      - echo "$ID_ED25519" > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - echo "$ID_ED25519_PUB" > ~/.ssh/id_ed25519.pub
      - chmod 644 ~/.ssh/id_ed25519.pub
      - ssh-keyscan github.com >> githubKey
      - ssh-keygen -lf githubKey
      - cat githubKey > ~/.ssh/known_hosts
      - # configure git
      - git config --global user.email "drone@localhost"
      - git config --global user.name "drone"
      - # update cleep-ci
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - git clone git@github.com:CleepDevice/cleep-ci.git
      - cd cleep-ci
      - echo $VERSION > .cleep-rc-version.txt
      - ./generate-drone-app-yml.sh
      - git add .drone-app.yml .cleep-rc-version.txt
      - git commit -m "Update Cleep "$VERSION" release candidate" | true
      - git push -u origin HEAD | true
      - # keep latest release
      - export FREEZED_VERSION=`cat .cleep-rc-version.txt`
      - cd ..
      - rm -rf cleep-ci
      - echo $FREEZED_VERSION > freezed_version.txt

  - name: freeze-markets
    image: 192.168.1.125:5000/cleep-git:20230216
    environment:
      ID_ED25519:
        from_secret: id_ed25519
      ID_ED25519_PUB:
        from_secret: id_ed25519_pub
    commands:
      - # MUST BE EXECUTED AFTER update-app-ci-for-rc STEP
      - test -f freezed_version.txt || echo "No freezed_version.txt file found. Cannot continue"
      - # configure ssh
      - mkdir -p ~/.ssh
      - echo "$ID_ED25519" > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - echo "$ID_ED25519_PUB" > ~/.ssh/id_ed25519.pub
      - chmod 644 ~/.ssh/id_ed25519.pub
      - ssh-keyscan github.com >> githubKey
      - ssh-keygen -lf githubKey
      - cat githubKey > ~/.ssh/known_hosts
      - # configure git
      - git config --global user.email "drone@localhost"
      - git config --global user.name "drone"
      - # get version
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - # freeze version on cleep-apps
      - git clone git@github.com:CleepDevice/cleep-apps.git
      - cd cleep-apps
      - git tag "v"$VERSION
      - git push --tags
      - cd ..
      - # freeze version on cleep-apps-nonfree
      - git clone git@github.com:CleepDevice/cleep-apps-nonfree.git
      - cd cleep-apps-nonfree
      - git tag "v"$VERSION
      - git push --tags



---
kind: pipeline
type: docker
name: release

platform:
  os: linux
  arch: arm

trigger:
  branch:
    - master
  event:
    - tag
  ref:
    include:
    - refs/tags/v*
    exclude:
    - refs/tags/v*-pre*
    - refs/tags/v*-rc*
    - refs/tags/v*-cleepos*

concurrency:
  limit: 1

clone:
  disable: true

services:
  - name: launch-docker
    image: mazzolino/docker:20.10.12-dind
    privileged: true
    network_mode: host
    volumes:
      - name: dockersock
        path: /var/run
    command: ['--insecure-registry=192.168.1.125:5000']

volumes:
  - name: dockersock
    temp: {}

steps:
  - name: clone
    image: 192.168.1.125:5000/cleep-git:latest
    commands:
      - git clone $DRONE_REMOTE_URL cleep-dev
      - ls -la
      - cd cleep-dev
      - git checkout $DRONE_SOURCE_BRANCH

  - name: run-cleep-tests
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    privileged: true
    environment:
      COVERALLS_REPO_TOKEN:
        from_secret: coveralls_cleep_token
    commands:
      - python3 -m pip -q --no-color install cleepcli pip coveralls --upgrade
      - python3 -m pip freeze | grep cleepcli
      - cd cleep-dev
      - python3 -m pip install -r requirements-test.txt
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli coresync
      - cleep-cli coretests --coverage --output
      - coveralls ||Â /bin/true

  - name: build-cleep-deb
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    environment:
      SENTRY_DSN:
        from_secret: sentry_dsn
    commands:
      - apt-get -o Acquire::ForceIPv4=true -qq update
      - apt-get -o Acquire::ForceIPv4=true -qq -y install python3 wget python3-distutils python3-dev devscripts python3-all python3-setuptools dh-python
      - python3 -m pip -q --no-color install cleepcli pip --upgrade
      - python3 -m pip freeze | grep cleepcli
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli corebuild
      - ls -la

  - name: test-cleep-install
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    commands:
      - apt-get install --yes --fix-broken ./cleep_*_armhf.deb
      - export CLEEP_ENV=ci
      - cleep --noro --stdout --dryrun
      - cleep --version > version.txt

  - name: publish-cleep-docs
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    environment:
      ID_ED25519:
        from_secret: id_ed25519
      ID_ED25519_PUB:
        from_secret: id_ed25519_pub
    commands:
      - python3 -m pip -q --no-color install cleepcli pip --upgrade
      - python3 -m pip freeze | grep cleepcli
      - # configure ssh
      - mkdir -p ~/.ssh
      - echo "$ID_ED25519" > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - echo "$ID_ED25519_PUB" > ~/.ssh/id_ed25519.pub
      - chmod 644 ~/.ssh/id_ed25519.pub
      - ssh-keyscan github.com >> githubKey
      - ssh-keygen -lf githubKey
      - cat githubKey > ~/.ssh/known_hosts
      - # configure git
      - cd cleep-dev
      - git config --global user.email "drone@localhost"
      - git config --global user.name "drone"
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli coredocs --publish

  - name: build-cleep-docker-image
    image: 192.168.1.125:5000/cleep-utils:20230205
    network_mode: host
    volumes:
      - name: dockersock
        path: /var/run
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - # MUST BE RAN AFTER test-cleep-install STEP to get version.txt file generated
      - test -f version.txt || echo "No version.txt file found. Cannot continue"
      - docker --version
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - cp -a "cleep_"$VERSION"_armhf.deb" "cleep-dev/cleep.deb"
      - cd cleep-dev
      - ls -la 
      - docker login 192.168.1.125:5000 --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - docker build -f Dockerfile -t 192.168.1.125:5000/cleep/cleep:$VERSION .
      - docker push 192.168.1.125:5000/cleep/cleep:$VERSION

  - name: publish-cleep-deb
    image: 192.168.1.125:5000/cleep-build/bullseye:20231205
    network_mode: host
    privileged: true
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - # MUST BE RAN AFTER test-cleep-install STEP to get version.txt file generated
      - test -f version.txt || echo "No version.txt file found. Cannot continue"
      - python3 -m pip -q --no-color install cleepcli pip --upgrade
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - export REPO_DIR=/drone/src/cleep-dev
      - cleep-cli corepublish --version=$VERSION



---
kind: pipeline
type: docker
name: release-cleepos

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    - master
  event:
    - tag
  ref:
    - refs/tags/v*-cleepos*

concurrency:
  limit: 1

clone:
  disable: true

volumes:
  - name: dev
    host:
      path: /dev

steps:
  - name: clone
    image: 192.168.1.1:8662/cleep-git:20230315
    commands:
      - git clone $DRONE_REMOTE_URL cleep-dev
      - ls -la
      - cd cleep-dev
      - git checkout $DRONE_SOURCE_BRANCH

  - name: prepare-cleepos-image
    image: 192.168.1.1:8662/cleep-git:20230315
    network_mode: host
    environment:
      ID_ED25519:
        from_secret: id_ed25519
      ID_ED25519_PUB:
        from_secret: id_ed25519_pub
    commands:
      - # get version from tag
      - echo "DRONE_TAG="$DRONE_TAG
      - echo $DRONE_TAG | awk -F "-" '{ print substr($1,2) }' > version.txt
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - # configure ssh
      - mkdir -p ~/.ssh
      - echo "$ID_ED25519" > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - echo "$ID_ED25519_PUB" > ~/.ssh/id_ed25519.pub
      - chmod 644 ~/.ssh/id_ed25519.pub
      - ssh-keyscan github.com >> githubKey
      - ssh-keygen -lf githubKey
      - cat githubKey > ~/.ssh/known_hosts
      - rm githubKey
      - # get cleep-packer files
      - git clone git@github.com:CleepDevice/cleep-packer.git
      - cp version.txt cleep-packer/.
      - cd cleep-packer
      - ./generate-cleepos-lite-arm-json.sh
      - head -n 4 cleepos-lite-arm.json

  - name: build-cleepos-image
    image: mkaczanowski/packer-builder-arm:1.0.6
    network_mode: host
    privileged: true
    volumes:
      - name: dev
        path: /dev
    commands:
      - # enable packer for arm (see https://github.com/mkaczanowski/packer-builder-arm/blob/master/docker/entrypoint.sh)
      - mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
      - find /proc/sys/fs/binfmt_misc -type f -name 'qemu-*' -exec sh -c 'echo -1 > "$1"' shell {} \;
      - echo "Register qemu-aarch64"
      - echo ":qemu-aarch64:M::\x7fELF\x02\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\xb7\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-aarch64-static:F" > /proc/sys/fs/binfmt_misc/register
      - echo "Register qemu-arm"
      - echo ":qemu-arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-arm-static:F" > /proc/sys/fs/binfmt_misc/register
      - # run packer
      - cd cleep-packer
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - packer build cleepos-lite-arm.json
      - ls -lh
      - mv "cleepos_"$VERSION".zip" ../.
      - mv "cleepos_"$VERSION".sha256" ../.
      - cd ..
      - rm -rf cleep-packer
      - ls -lh

  - name: publish-cleepos-image
    image: 192.168.1.1:8662/cleep-utils:20230315
    network_mode: host
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - ls -lh
      - export VERSION=`cat version.txt`
      - echo $VERSION
      - CHANGELOG=`realpath cleep-dev/debian/changelog`
      - github-helper publishcleepos --owner=CleepDevice --repo=cleep-os --archive="cleepos_"$VERSION".zip" --sha256="cleepos_"$VERSION".sha256" --version=$VERSION --changelog=$CHANGELOG --token=$GITHUB_ACCESS_TOKEN

